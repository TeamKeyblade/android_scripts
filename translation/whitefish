#!/bin/bash
# Copyright (C) 2014 Sean Donovan

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#    http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Russian

## Common
export KITCHENTITLE=$( echo "Swordrune10's Android Kitchen!" )
export KITCHENUNDERLINE=$( echo "==============================" )
export KITCHENMENUWHICH=$( echo "Что Вы хотите сделать?: " )
export MENUGOBACK=$( echo "Назад" )
export NOTPROPERSELECTION=$( echo "Вы не сделали выбор, попытайтесь снова!" )
export ENTERTOCONTINUE=$( echo "Нажмите ввод для продолжения: " )
export MAINMENURETURN=$( echo "Возврат в основное меню, нажмите ввод для продолжения: " )
export ENTERTOEXIT=$( echo "Нажмите ввод для выхода: " )
export ABORTMESSAGE=$( echo "Отмена.." )
export COMPLETEDMESSAGE=$( echo "Готово!" )
export QUESTIONYESNO=$( echo "да/нет? " )
export ANSWERYES=$( echo "да" )
export ANSWERY=$( echo "д" )
export ANSWERNO=$( echo "нет" )
export ANSWERN=$( echo "н" )

## Macosxinit
export MACOSXINITRUN=$( echo "Обнаружена Mac OS X!" )
export MACOSXINITCANTFINDDMG=$( echo "Невозможно найти образ android для установки, сборка должна быть на mac os x
Если Вы это уже выполнили, пожалуйста, вставьте в правильное место с правильным названием
Правильное место и название - Ваша домашняя папка с именем android.dmg, например ~/android.dmg

Хотите создать новый android.dmg?" )
export MACOSXINITHOWBIG=$( echo "Насколько большим должен быть android.dmg? Учитывайте, что при увеличении размера Вам понадобится больше места
Введите число в гигабайтах" )
export MACOSXINITMOUNTNEW=$( echo "Установка нового android.dmg в /Volumes/android.." )
export MACOSXINITMOVEINTO=$( echo "Перемещение в android.dmg.." )
export MACOSXINITSETUP=$( echo "Настройка kitchen.." )
export MACOSXINITSETUP=$( echo "Настройка kitchen.." )
export MACOSXINITFOUNDDMG=$( echo "Найден Ваш android.dmg, установка.." )
export MACOSXINITCANTFINDKITCHEN=$( echo "Невозможно найти rom kitchen в /Volumes/android

Хотите произвести установку rom kitchen в /Volumes/android?" )

## Errors
export ERRORHEADER=$( echo "Произошла ошибка!
======================" )
export ERRORSIDEEFFECTS=$( echo "Побочные эффекты могут включать сбой корректной сборки и отсутствие поддержки
for build environment setup" )
export ERRORCONTACTINFO=$( echo "Если Вы видите эту ошибку, пожалуйста, сообщите мне на xda или rootzwiki
Если предпочитаете почту, напишите на mishana@swordrune10.net
Помимо этого, у меня есть канал на freenode #Swordrune10Kitchen" )
export BOUNCERPOWERPC=$( echo "Обнаружен процессор PowerPC!
===========================
Использование powerpc не обязательно запрещено, но не рекомендуется" )
export BOUNCER32BIT=$( echo "Обнаружен процессор 32-бит!
==========================
Использование 32-бит не обязательно запрещено, но не рекомендуется" )
export BOUNCERKITCHENHOME=$( echo "Kitchen установлена в неправильное место!
=================================
Kitchen не будет корректно работать при установке в домашнюю папку, пожалуйста, переместите" )
export ENVIRONMENTSETUP32BIT=$( echo "32-бит не поддерживается!
=====================
Установка сборки поддерживает только операционные системы 64-бит" )
export ENVIRONMENTSETUPNOTSUPPORTED=$( echo "Операционная система не поддерживается!
===============================
Поддерживаемые операционные системы (только 64-бит):
Ubuntu 10.04 - 14.04 (полная поддержка)
Debian (общая поддержка)
Linux Mint (общая поддержка)
Arch Linux (общая поддержка)
Fedora (общая поддержка)
Mac OS X (общая поддержка)" )

## Repos
export REPOSKITCHEN=$( echo "Kitchen app" )
export REPOSAOKP=$( echo "Android Open Kang Project" )
export REPOSAOSP43=$( echo "Android Open Source Project 4.3" )
export REPOSAOSP=$( echo "Android Open Source Project 4.4" )
export REPOSCARBON=$( echo "Carbon" )
export REPOSCM10=$( echo "Cyanogenmod 10.2" )
export REPOSCM=$( echo "Cyanogenmod 11" )
export REPOSEV=$( echo "Evervolv" )
export REPOSOMNI=$( echo "omnirom" )
export REPOSPACMAN=$( echo "PAC-man" )
export REPOSPARA=$( echo "ParanoidAndroid" )

## Devices
export NEXUS4=$( echo "GSM Nexus 4" )
export NEXUS5=$( echo "LTE Nexus 5" )
export GSMGNEXUS=$( echo "GSM Galaxy Nexus" )
export SPRGNEXUS=$( echo "Sprint Galaxy Nexus" )
export VZWGNEXUS=$( echo "Verizon Galaxy Nexus" )
export ALLGNEXUS=$( echo "Все Galaxy Nexi" )
export GSMNEXUSS=$( echo "GSM Nexus S" )
export SPRNEXUSS=$( echo "Sprint Nexus S 4G" )
export ALLNEXUSS=$( echo "Все Nexus S'" )
export WIFINEXUS72012=$( echo "Планшет Wifi Nexus 7 (2012)" )
export GSMNEXUS72012=$( echo "Планшет GSM Nexus 7 (2012)" )
export ALLNEXUS72012=$( echo "Все планшеты Nexus 7 (2012)" )
export WIFINEXUS72013=$( echo "Планшет Wifi Nexus 7 (2013)" )
export LTENEXUS72013=$( echo "Планшет LTE Nexus 7 (2013)" )
export ALLNEXUS72013=$( echo "Все планшеты Nexus 7 (2013)" )
export ALLNEXUS7=$( echo "Все планшеты Nexus 7" )
export NEXUS10=$( echo "Wifi Nexus 10" )
export WIFIXOOM=$( echo "Планшет Wifi Xoom" )
export VZWXOOM=$( echo "Планшет Verizon Xoom" )
export ALLXOOM=$( echo "Все планшеты Xoom" )
export ALLNEXUS=$( echo "Все устройства Nexus" )

## Scriptmakir
export SCRIPTMAKIRREDEEMER=$( echo "Redeemer запущен!" )
export SCRIPTMAKIRRMKITCHEN=$( echo "Удаление Kitchen" )
export SCRIPTMAKIRSETUPKITCHEN=$( echo "Настройка Kitchen" )
export SCRIPTMAKIRDESTROYER=$( echo "Destroyer запущен!" )
export SCRIPTMAKIRDESTROYEROFWORLDS=$( echo "Destroyer of Worlds запущен!" )
export SCRIPTMAKIRRMREPO=$( echo "Удаление папки репозитория" )

## Kitchen
export KITCHENMAINMENU=$( echo "Главное меню:" )
export KITCHENMENU1=$( echo "Настройка/обновление Kitchen" )
export KITCHENMENU2=$( echo "Конфигурация Kitchen" )
export KITCHENMENU3=$( echo "Запустить Kitchen" )
export KITCHENMENU4=$( echo "Исправить Kitchen" )
export KITCHENMENU5=$( echo "Автосборка Kitchen" )
export KITCHENMENU6=$( echo "Выход" )
export KITCHENTHANKS=$( echo "Спасибо за использование Swordrune10's Kitchen! До свидания.." )
export KITCHENBORED=$( echo "Похоже, Вам скучно.. хотите посмотреть кино?" )
export KITCHENTOUGH=$( echo "Облом!" )

## Reposync
# Usage and Flags
export REPOSYNCUSAGE=$( echo "repo -- программа для инициализации/обновления репозиториев android" )
export REPOSYNCFLAGD=$( echo "удалить соответствующую папку и выйти из программы" )
export REPOSYNCFLAGH=$( echo "показать эту справку" )
export REPOSYNCFLAGP=$( echo "очистить папку, реинициализировать, после чего обновить" )
export REPOSYNCFLAGU=$( echo "обновить этот отдельный репозиторий" )
export REPOSYNCUPDATE1=$( echo "Обновить $REPOSKITCHEN" )
export REPOSYNCUPDATE2=$( echo "Обновить $REPOSAOKP" )
export REPOSYNCUPDATE3=$( echo "Обновить $REPOSAOSP43" )
export REPOSYNCUPDATE4=$( echo "Обновить $REPOSAOSP" )
export REPOSYNCUPDATE5=$( echo "Обновить $REPOSCARBON" )
export REPOSYNCUPDATE6=$( echo "Обновить $REPOSCM10" )
export REPOSYNCUPDATE7=$( echo "Обновить $REPOSCM" )
export REPOSYNCUPDATE8=$( echo "Обновить $REPOSEV" )
export REPOSYNCUPDATE9=$( echo "Обновить $REPOSOMNI" )
export REPOSYNCUPDATE10=$( echo "Обновить $REPOSPACMAN" )
export REPOSYNCUPDATE11=$( echo "Обновить $REPOSPARA" )
export REPOSYNCUPDATE12=$( echo "Обновить все доступные репозитории" )
export REPOSYNCUPDATE13=$( echo "Обновить все репозитории" )
export REPOSYNCUSAGEEXAMP=$( echo "Пример: reposync -u cm-10.2" )
export REPOSYNCUSAGELIST1=$( echo "ввод \"reposync -u list\" переместит" )
export REPOSYNCUSAGELIST2=$( echo "Вас опять в список опций" )

# Menu
export REPOSYNCMENUWHAT=$( echo "Что вы обновляете?" )
export REPOSYNCMENUINIT=$( echo "Если репозиторий не инициализирован, он будет on update" )
export REPOSYNCMENU1=$( echo "Установить команду repo" )
export REPOSYNCMENU2=$( echo "Установить среду сборки" )
export REPOSYNCMENU3=$( echo "Обновить репозиторий $REPOSKITCHEN" )
export REPOSYNCMENU4=$( echo "Обновить репозиторий $REPOSAOKP" )
export REPOSYNCMENU5=$( echo "Обновить репозиторий $REPOSAOSP43" )
export REPOSYNCMENU6=$( echo "Обновить репозиторий $REPOSAOSP" )
export REPOSYNCMENU7=$( echo "Обновить репозиторий $REPOSCARBON" )
export REPOSYNCMENU8=$( echo "Обновить репозиторий $REPOSCM10" )
export REPOSYNCMENU9=$( echo "Обновить репозиторий $REPOSCM" )
export REPOSYNCMENU10=$( echo "Обновить репозиторий $REPOSEV" )
export REPOSYNCMENU11=$( echo "Обновить репозиторий $REPOSOMNIy" )
export REPOSYNCMENU12=$( echo "Обновить репозиторий $REPOSPACMAN" )
export REPOSYNCMENU13=$( echo "Обновить репозиторий $REPOSPARA" )
export REPOSYNCMENU14=$( echo "Обновить все доступные репозитории" )
export REPOSYNCMENU15=$( echo "Обновить все репозитории!" )
export REPOSYNCMENU16=$( echo "Обновить/добавить otherrepo" )

# Sync and Init
export REPOSYNCNOTINITSKIP=$( echo "не инициализировано, пропуск" )
export REPOSYNCUPDATING=$( echo "Обновление" )
export REPOSYNCBLAHSMANIFEST=$( echo "манифест" )
export REPOSYNCNOTINITYET=$( echo "не инициализировано, инициализация сейчас" )
export REPOSYNCNOTINITWANTTO=$( echo "не инициализировано, хотите инициализировать?" )
export REPOSYNCINIT=$( echo "инициализация" )
export REPOSYNCNOTINIT=$( echo "не было инициализировано" )
export REPOSYNCREPO=$( echo "репозиторий" )
export REPOSYNCREPOALREADY=$( echo "Команда repo уже установлена" )
export REPOSYNCREPOINSTALL=$( echo "Установка команды repo" )
export REPOSYNCCOMPLETE=$( echo "Обновление завершено!" )

# Otherrepo Sync and Init
export REPOSYNCADDOR=$( echo "Мы добавляем или обновляем otherrepo?" )
export REPOSYNCOTHERMENU1=$( echo "Добавить в пользовательскую папку репозитория" )
export REPOSYNCOTHERMENU2=$( echo "Обновить все пользовательские репозитории" )
export REPOSYNCOTHERREPONAME=$( echo "Какое имя у репозитория?" )
export REPOSYNCOTHERREPOSHORTNAME=$( echo "Какое короткое имя у этого репозитория? Пример: Android Open Source Project = aosp" )
export REPOSYNCOTHERREPOURL=$( echo "Какой url к манифесту репозитория?" )
export REPOSYNCOTHERREPOBRANCH=$( echo "Какую ветвь манифеста репозитория Вы хотите использовать?" )

## Environmentsetup
export ENVIRONMENTSETUPINIT=$( echo "Инициализация среды сборки" )
export ENVIRONMENTSETUPOS=$( echo "Определение операционной системы.." )
export ENVIRONMENTSETUPINSTALL=$( echo "Установка необходимых пакетов, пожалуйста, введите пароль" )
export ENVIRONMENTSETUPDXCODE=$( echo "Xcode установлен? Рекомендуем версию 3.1.4 или новее" )
export ENVIRONMENTSETUPDMACPORTS=$( echo "MacPorts установлен?" )

# Platform
export ENVIRONMENTSETUPFEDORA=$( echo "У Вас Fedora или RedHat!" )
export ENVIRONMENTSETUPDEBIAN=$( echo "У Вас Debian!" )
export ENVIRONMENTSETUPULMN=$( echo "У Вас Ubuntu, либо 10.04, 10.10, либо 11.04!" )
export ENVIRONMENTSETUPUO=$( echo "У Вас Ubuntu 11.10!" )
export ENVIRONMENTSETUPUPQ=$( echo "У Вас Ubuntu 12.04 или 12.10!" )
export ENVIRONMENTSETUPURST=$( echo "У Вас Ubuntu 13.04, 13.10, либо 14.04!" )
export ENVIRONMENTSETUPMINT=$( echo "У Вас Linux Mint!" )
export ENVIRONMENTSETUPARCH=$( echo "У Вас Arch Linux!" )
export ENVIRONMENTSETUPDARWIN=$( echo "У Вас Mac OS X!" )

# Java
export ENVIRONMENTSETUPFLEXION=$( echo "Установка java займёт некоторое время, для соблюдения формальностей приложение Kitchen будет использовать данные из скрипта oab-java с flexion.org" )
export ENVIRONMENTSETUPFLEXION1=$( echo " [x] Получение страницы загрузки Java SE" )
export ENVIRONMENTSETUPFLEXION2=$( echo " [x] Получение страницы загрузки текущего релиза" )
export ENVIRONMENTSETUPFLEXION3=$( echo " [x] Получение страницы загрузки предыдущих релизов" )
export ENVIRONMENTSETUPWEBUPD8=$( echo "Установка java займёт некоторое время, для соблюдения формальностей приложение Kitchen будет использовать установщик java webupd8" )

## Preupdate
export PREUPDATEAOSP43=$( echo "Обновление папки local_manifests $REPOSAOSP43" )
export PREUPDATEAOSP=$( echo "Обновление папки local_manifests $REPOSAOSP" )
export PREUPDATECM10=$( echo "Обновление папки local_manifests $REPOSCM10" )
export PREUPDATECM=$( echo "Обновление папки local_manifests $REPOSCM" )
export PREUPDATEOMNI=$( echo "Обновление папки local_manifests $REPOSOMNI" )

## Configkitchen
export CONFIGKITCHENMENUTITLE=$( echo "Меню конфигупации Kitchen" )
export CONFIGKITCHENMENU1=$( echo "Редактировать Gitpuller" )
export CONFIGKITCHENMENU2=$( echo "Редактировать Romeditor" )
export CONFIGKITCHENMENU3=$( echo "Создать/редактировать список other repo" )
export CONFIGKITCHENOTHERREPO=$( echo "редактирование расположений файлов пользовательских репозиториев" )
export CONFIGKITCHENOTHERREPONAME=$( echo "редактирование названий пользовательских репозиториев" )

## Fixkitchen
export FIXKITCHENSOMETHINGNOT=$( echo "Что-то работает неправильно? Что делать?" )
export FIXKITCHENPURGE=$( echo "Purge = удалить файлы, загрузить снова" )
export FIXKITCHENDELETE=$( echo "Delete = удалить это!" )
export FIXKITCHENMENU1=$( echo "Добавить репо к определённой папке local_manifests" )
export FIXKITCHENMENU2=$( echo "Очистить определённую папку local_manifests" )
export FIXKITCHENMENU3=$( echo "Очистить или удалить определённый репозиторий" )
export FIXKITCHENMENU4=$( echo "Очистить или удалить все репозитории" )
export FIXKITCHENMENU5=$( echo "Очистить или удалить приложение Kitchen" )
export FIXKITCHENMENU6=$( echo "Удалить приложение Kitchen и его зависимости" )
export FIXKITCHENMENU7=$( echo "Удалить содержание Вашего компьютера" )
export FIXKITCHENMENU8=$( echo "Удалить весь интернет" )
export FIXKITCHENADD=$( echo "Добавление репозитория для otherdevices.xml для" )
export FIXKITCHENPURGE=$( echo "папка local_manifests была очищена" )
export FIXKITCHENWHICHADD=$( echo "В какой репозиторий Вы хотите добавить?" )
export FIXKITCHENWHICHPURGE=$( echo "В каком репозитории Вы хотите очистить папку local_manifests?" )
export FIXKITCHENWHICHREPO=$( echo "Какой репозиторий Вы хотите очистить или удалить?" )
export FIXKITCHENPURGEDELETE=$( echo "Purge или Delete?" )
export FIXKITCHENPURGEDELETEEXIT=$( echo "Purge = удалить файлы, загрузить снова
Delete = удалить это!
введите exit для возврата назад" )
export FIXKITCHENPURGEDELETEREPO=$( echo "Очистить или удалить все репозитории?" )
export FIXKITCHENPURGEDELETEKITCHEN=$( echo "Очистить или удалить приложение Kitchen?" )
export FIXKITCHENREDEEMER=$( echo "Переключение на скрипт Redeemer.." )
export FIXKITCHENDELETEKITCHEN=$( echo "Уверены, что хотите удалить приложение Kitchen?" )
export FIXKITCHENTYPEYES=$( echo "Нужно ввести \"да\" для продолжения" )
export FIXKITCHENTYPEABORT=$( echo "Введите что-нибудь ещё для отмены операции" )
export FIXKITCHENDESTROYERSWITCH=$( echo "Переключение на скрипт Destroyer" )
export FIXKITCHENDELETEKITCHENALL=$( echo "Уверены, что хотите удалить приложение Kitchen и его зависимости?" )
export FIXKITCHENNOTDELETEBUILDS=$( echo "Пожалуйста, учтите: каталог сборки не будет удалён" )
export FIXKITCHENDESTROYEROFWORLDSSWITCH=$( echo "Переключение на скрипт Destroyer of Worlds" )
export FIXKITCHENDELETECOMPUTER=$( echo "Уверены..? Это удалит всё с Вашего компьютера, включая подключенные внешние диски и флэш-накопители!!" )
export SUICIDENOTE=$( echo "да, пожалуйста, удалите всё с моего компьютера" )
export FIXKITCHENMUSTTYPEEXACTLY=$( echo "Вы должны точно ввести \"$SUICIDENOTE\" для продолжения" )
export FIXKITCHENTYPEPASSY=$( echo "Пожалуйста, введите Ваш пароль для уничтожения всего" )
export TROLLFACETITLE=$( echo "Android Kitchen-тролль!" )
export TROLLFACEUNDERLINE=$( echo "============================" )
export FIXKITCHENIBET=$( echo "Да, старина, спорю, тебе жаль, что это не так легко!" )

## Build Common
export BUILDMENUTITLE=$( echo "Меню сегодняшнего ланча:" )
export BUILDREPOMENU1=$( echo "Репозиторий $REPOSAOKP" )
export BUILDREPOMENU2=$( echo "Репозиторий $REPOSAOSP43y" )
export BUILDREPOMENU3=$( echo "Репозиторий $REPOSAOSP" )
export BUILDREPOMENU4=$( echo "Репозиторий $REPOSCARBON" )
export BUILDREPOMENU5=$( echo "Репозиторий $REPOSCM10" )
export BUILDREPOMENU6=$( echo "Репозиторий $REPOSCM" )
export BUILDREPOMENU7=$( echo "Репозиторий $REPOSEV" )
export BUILDREPOMENU8=$( echo "Репозиторий $REPOSOMNI" )
export BUILDREPOMENU9=$( echo "Репозиторий $REPOSPACMAN" )
export BUILDREPOMENU10=$( echo "Репозиторий $REPOSPARA" )
export BUILDALLABOVE=$( echo "Собрать всё выше!" )
export BUILDREPONOTSETUP=$( echo "Выбранный репозиторий android не является установкой!" )
export BUILDDEVICENOTCOMPATIBLE=$( echo "Это устройство несовместимо с данным репозиторием, попытайтесь снова!" )
export BUILDMENURETURN=$( echo "Возврат к меню сборки, нажмите ввод для продолжения: " )

## Buildmenu
export BUILDMENU1=$( echo "Собрать Nexus 4" )
export BUILDMENU2=$( echo "Собрать Nexus 5" )
export BUILDMENU3=$( echo "Собрать Nexus 7" )
export BUILDMENU4=$( echo "Собрать Nexus 10" )
export BUILDMENU5=$( echo "Собрать Galaxy Nexus" )
export BUILDMENU6=$( echo "Собрать Nexus S" )
export BUILDMENU7=$( echo "Собрать планшет Xoom" )
export BUILDMENU8=$( echo "Собрать всё выше!" )
export BUILDMENU9=$( echo "Собрать другое устройство" )
export BUILDMENU10=$( echo "Собрать с другим репозиторием" )

## Builddevice
export BUILDDEVICEBEBUILT=$( echo "выбрано для сборки!" )
export BUILDDEVICEWHICHREPO=$( echo "Какой репозиторий android мы будем собирать сегодня?" )
export BUILDDEVICENEXUS4=$( echo "Собрать $NEXUS4" )
export BUILDDEVICENEXUS5=$( echo "Собрать $NEXUS5" )
export BUILDDEVICEGSMGNEXUS=$( echo "Собрать $GSMGNEXUS" )
export BUILDDEVICESPRGNEXUS=$( echo "Собрать $SPRGNEXUS" )
export BUILDDEVICEVZWGNEXUS=$( echo "Собрать $VZWGNEXUS" )
export BUILDDEVICEGSMNEXUSS=$( echo "Собрать $GSMNEXUSS" )
export BUILDDEVICESPRNEXUSS=$( echo "Собрать $SPRNEXUSS" )
export BUILDDEVICEWIFINEXUS72012=$( echo "Собрать $WIFINEXUS72012" )
export BUILDDEVICEGSMNEXUS72012=$( echo "Собрать $GSMNEXUS72012" )
export BUILDDEVICEALLNEXUS72012=$( echo "Собрать $ALLNEXUS72012" )
export BUILDDEVICEWIFINEXUS72013=$( echo "Собрать $WIFINEXUS72013" )
export BUILDDEVICELTENEXUS72013=$( echo "Собрать $LTENEXUS72013" )
export BUILDDEVICEALLNEXUS72013=$( echo "Собрать $ALLNEXUS72013" )
export BUILDDEVICENEXUS10=$( echo "Собрать $NEXUS10" )
export BUILDDEVICEWIFIXOOM=$( echo "Собрать $WIFIXOOM" )
export BUILDDEVICEVZWXOOM=$( echo "Собрать $VZWXOOM" )

## Buildother
export BUILDOTHERBEBUILT=$( echo "Сборка другого устройства выбрана для сборки!" )
export BUILDOTHERTYPEDEVICE=$( echo "Пожалуйста, введите устройство для сборки" )
export BUILDOTHERTYPELIST=$( echo "Введите list для просмотра всех поддерживаемых устройств" )
export BUILDOTHERTYPEEXIT=$( echo "Введите exit для возврата" )
export BUILDOTHERBUILDTITLE=$( echo "Список устройств" )
export BUILDOTHERBUILDUNDERLINE=$( echo "===========" )
export BUILDOTHERNOTCOMPATIBLE=$( echo "Это устройство несовместимо с данным репозиторием, всё равно собрать?" )
export BUILDOTHERCONTINUE=$( echo "Продолжаем сборку" )
export BUILDOTHERNOTVALID=$( echo "Неправильный ответ, сборка невозможна" )

## Buildotherrepo
export BUILDOTHERREPOEMPTY=$( echo "Файл other repo пустой, пожалуйста, добавьте файл и попытайтесь снова!" )
export BUILDOTHERREPOBEBUILT=$( echo "Сборка с другим репозиторием выбрана для сборки!" )

## Buildandro
export BUILDANDROCLEAN=$( echo "Очистить папку?" )
export BUILDANDROCLEANENTER=$( echo "Вы сейчас нажали enter просто так? Ладно, я всё равно очищу папку.." )
export BUILDANDROCCACHECONTINUEWITHOUT=$( echo "Продолжаем без использования ccache; если хотите использовать ccache, пожалуйста, установите его" )
export BUILDANDROCCACHEFOUND=$( echo "Найдена папка ccache, будет использована для сборки" )
export BUILDANDROCCACHEDIDNOTDETECT=$( echo "Kitchen не обнаружила папки ccache, хотите создать её сейчас?" )
export BUILDANDROCCACHEOTHER=$( echo "Может, ccache расположен в другом месте, тогда введите other" )
export BUILDANDROCCACHEHOWBIG=$( echo "Какой максимальный размер ccache Вы хотите? Рекомендуемый размер 50 - 100 гигабайт" )
export BUILDANDROCCACHEAMOUNTTYPED=$( echo "Учтите, что величину нужно ввести в гигабайтах" )
export BUILDANDROCCACHEREPONOTSUPPORTED=$( echo "Репозиторий не поддерживает ccache, продолжаем без него" )
export BUILDANDROCCACHEEXACTLOCATION=$( echo "Каково точное место размещения ccache? Пример расположения по умолчанию ~/.ccache" )
export BUILDANDROCCACHENOTFOUND=$( echo "Указанное расположение не найдено, продолжаем без него" )
export BUILDANDROREPONOTSUPPORTED=$( echo "Репозиторий не поддерживается!" )
export BUILDANDROBUILDMESSEDUP=$( echo "Сбой сборки!" )
export BUILDANDROMAKETEMP1=$( echo "Создание временной папки для пост-сборки" )
export BUILDANDROMAKETEMP2=$( echo "Исправление" )
export BUILDANDROUNZIP=$( echo "Распаковка" )
export BUILDANDRORMSTUFF=$( echo "Удаление ненужной папки восстановления и file_contexts из" )
export BUILDANDROADDROM1=$( echo "Добавление элементов rom manager для" )
export BUILDANDROADDROM2=$( echo "build.prop" )
export BUILDANDROZIP=$( echo "Упаковка" )
export BUILDANDROSIGN1=$( echo "Подпись" )
export BUILDANDROSIGN2=$( echo "с тестовыми ключами" )
export BUILDANDROMOVEOLD1=$( echo "Перемещение старой сборки в" )
export BUILDANDROMOVEOLD2=$( echo "/old" )
export BUILDANDROCOPY=$( echo "Копирование в" )
export BUILDANDROCLEANUP=$( echo "Очистка временной папки" )

## Buildautomenu
export BUILDAUTOMENUTITLE=$( echo "Меню автосборщика" )
export BUILDAUTOMENU1=$( echo "Запуск автосборщика" )
export BUILDAUTOMENU2=$( echo "Добавление в список автосборки" )
export BUILDAUTOMENU3=$( echo "Очистка списка автосборки" )
export BUILDAUTOMENU4=$( echo "Вкл выход автосборщика" )
export BUILDAUTOMENU5=$( echo "Вкл сборку other repo автосборщика" )
export BUILDAUTOMENU6=$( echo "Вкл функцию сна автосборщика" )
export BUILDAUTOMENUSETAUTO=$( echo "Какой репозиторий android мы устанавливаем для автосборки?" )
export BUILDAUTOMENUMOVEON=$( echo "Завершение добавления репозиториев, переход к добавлению устройств" )
export BUILDAUTOMENUADD1=$( echo "Добавлено" )
export BUILDAUTOMENUADD2=$( echo "к файлам автосборки" )
export BUILDAUTOMENUTYPEDEVICE=$( echo "Пожалуйста. введите устройство android, которое мы устанавливаем для автосборки" )
export BUILDAUTOMENUWANTTOCLEAR=$( echo "Уверены, что хотите очистить файлы автосборки?" )
export BUILDAUTOMENUCLEARED=$( echo "Файлы автосборки очищены" )
export BUILDAUTOMENUNOTCLEARED=$( echo "Файлы автосборки оставлены без измененийd" )
export BUILDAUTOMENUOUTPUT=$( echo "Это определит выход buildauto в папку скрипта swordkitchen" )
export BUILDAUTOMENUSOMEWHERE=$( echo "Или Вы хотите определить другое?" )
export BUILDAUTOMENUTYPEOUTPUT=$( echo "Введите yes для определения выхода в другое место:" )
export BUILDAUTOMENUTYPEABSOLUTE=$( echo "Пожалуйста, введите точный путь где бы Вы хотели, чтобы находился buildoutput.txt" )
export BUILDAUTOMENUOUTPUTSENT=$( echo "Выход будет отправлен" )
export BUILDAUTOMENUOUTPUTCLEAR=$( echo "Файл выхода очищен, buildauto будет регулярно выпускаться" )
export BUILDAUTOMENUADDBELOWREPO=$( echo "Добавьте ниже данной строчки папку repo для автосборки, otherrepo в папке otherrepo, каждый repo в одной строке" )
export BUILDAUTOMENUADDBELOWDEVICE=$( echo "Добавьте ниже данной строчки кодовое имя устройства для автосборки, каждое устройство в одной строке" )
export BUILDAUTOMENUOTHERREPOON=$( echo "other repo сборки автосборщика включен!" )
export BUILDAUTOMENUOTHERREPOOFF=$( echo "other repo сборки автосборщика выключен!" )
export BUILDAUTOMENUCOMPSLEEPTIME1=$( echo "Хотите, чтобы компьютер перешёл в сон на" )
export BUILDAUTOMENUCOMPSLEEPTIME2=$( echo "некоторое количество часов, или пробудился в определённое время?" )
export BUILDAUTOMENUSLEEPMENU1=$( echo "Пробудить в определённое время" )
export BUILDAUTOMENUSLEEPMENU2=$( echo "Некоторое количество часов" )
export BUILDAUTOMENUSPECIFIC1=$( echo "В какое время Вы хотите, чтобы сервер сборки проснулся на следующий день?" )
export BUILDAUTOMENUSPECIFIC2=$( echo "Конфигуращия 24 часа, например: для 2pm введите 14:00, для 7am - 07:00" )
export BUILDAUTOMENUHOURS1=$( echo "Как долго Вы хотите, чтобы сервер спал после сборки?" )
export BUILDAUTOMENUHOURS2=$( echo "Число вводится в часах" )
export BUILDAUTOMENUTYPEPASSY=$( echo "Пожалуйста, введите пароль пользователя, чтобы включить сон сервера сборки" )
export BUILDAUTOMENUSLEEPON=$( echo "Функция сна автосборщика включена!" )
export BUILDAUTOMENUSLEEPOFF=$( echo "Функция сна автосборщика выключена!" )

## Buildauto
export BUILDAUTOPLEASE=( echo "Пожалуйста, используйте меню конфигурации автосборщика" )
export BUILDAUTOBOTH=( echo "Репозиторий и устройство автосборщика не установлены!" )
export BUILDAUTOREPO=( echo "Репозиторий автосборщика не установлено!" )
export BUILDAUTODEVICE=( echo "Устройство автосборщика не установлено!" )
export BUILDAUTOWAIT=( echo "Ожидание 10 минут! Это не обратный отсчёт.." )
export BUILDAUTOSLEEP=( echo "Сон..." )
