#!/bin/bash
# Copyright (C) 2014 Sean Donovan

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#    http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

if [ ! "$INIT" ]; then
	cd $(dirname $0)
	export SCRIPT=$(echo "$0")
	../headerfile
	exit 0
fi

echo $ENVIRONMENTSETUPINIT
echo ""
echo $ENVIRONMENTSETUPOS

if ( ! uname -a | grep -q x86_64 ); then
	clear

	echo $ENVIRONMENTSETUP32BIT
	echo ""
	echo $ERRORCONTACTINFO
	read -p "$ENTERTOCONTINUE" done
	exit 0
fi

if ( uname -a | grep -q Linux ); then
	# Fedora
	if ( find /etc/fedora-release &> /dev/null ) || ( find /etc/redhat-release &> /dev/null ); then
		echo $ENVIRONMENTSETUPFEDORA
		echo $ENVIRONMENTSETUPINSTALL
		sudo yum install gcc gcc-c++ gperf flex bison glibc-devel.{x86_64,i686} \
		zlib-devel.{x86_64,i686} ncurses-devel.i686 libsx-devel readline-devel.i386 \
		glibc.i686 glibc-devel.i686 libstdc++.i686 zlib-devel.i686 libX11-devel.i686 \
		libXrender.i686 libXrandr.i686

		echo $ENVIRONMENTSETUPFLEXION
		read -p "$ENTERTOCONTINUE" done

		# fedora java installation
		# Exerpts from the much smarter (as u can see from the code) flexion.org oab-java script
		# slightly edited to remove unneeded code and grab the rpm version

		wget https://github.com/rraptorr/sun-java6/raw/master/debian/changelog -O $LOCAL/../changelog.tmp

		# Cet the current Debian package version
		DEB_VERSION=`head -n1 $LOCAL/../changelog.tmp | cut -d'(' -f2 | cut -d')' -f1 | cut -d'~' -f1`

		# Determine the currently supported Java version and update
		JAVA_VER=`echo ${DEB_VERSION} | cut -d'.' -f1`
		JAVA_UPD=`echo ${DEB_VERSION} | cut -d'.' -f2 | cut -d'-' -f1`

		# Try and dynamic find the JDK downloads
		echo $ENVIRONMENTSETUPFLEXION1
		wget "http://www.oracle.com/technetwork/java/javase/downloads/index.html" -O /tmp/oab-index.html

		# See if the Java version is on the download frontpage, otherwise look for it in
		# the previous releases page.
		DOWNLOAD_INDEX=`grep -P -o "/technetwork/java/javase/downloads/jdk-${JAVA_VER}u${JAVA_UPD}-downloads-\d+\.html" /tmp/oab-index.html | uniq`

		if [ -n "${DOWNLOAD_INDEX}" ]; then
			echo $ENVIRONMENTSETUPFLEXION2
			wget http://www.oracle.com/${DOWNLOAD_INDEX} -O /tmp/oab-download.html
		else
			echo $ENVIRONMENTSETUPFLEXION3
			wget http://www.oracle.com/technetwork/java/javasebusiness/downloads/java-archive-downloads-javase6-419409.html -O /tmp/oab-download.html
		fi

		for JAVA_BIN in jdk-${JAVA_VER}u${JAVA_UPD}-linux-x64-rpm.bin
		do
			# Get the download URL and size
			DOWNLOAD_URL=`grep ${JAVA_BIN} /tmp/oab-download.html | cut -d'{' -f2 | cut -d',' -f3 | cut -d'"' -f4`
			DOWNLOAD_SIZE=`grep ${JAVA_BIN} /tmp/oab-download.html | cut -d'{' -f2 | cut -d',' -f2 | cut -d':' -f2 | sed 's/"//g'`
			# Cookies required for download
			COOKIES="oraclelicensejdk-${JAVA_VER}u${JAVA_UPD}-oth-JPR=accept-securebackup-cookie;gpw_e24=http://edelivery.oracle.com"

			echo " [x] Downloading ${JAVA_BIN} : ${DOWNLOAD_SIZE} "
			wget --no-check-certificate --header="Cookie: ${COOKIES}" -c "${DOWNLOAD_URL}" -O $LOCAL/../${JAVA_BIN}

		done
		chmod +x $LOCAL/../${JAVA_BIN}
		cd $LOCAL/..
		sudo $LOCAL/../${JAVA_BIN}
		sudo rm -f *.rpm
		rm -f $LOCAL/../changelog.tmp

		echo ""
		echo $COMPLETEDMESSAGE
		envir=true
		read -p "$ENTERTOCONTINUE" done
	fi

	# Debian-based
	if ( find /etc/debian_version &> /dev/null ) || ( find /etc/lsb-release &> /dev/null ); then
		# Debian
		if ( lsb_release -i | grep -q Debian ); then
			echo $ENVIRONMENTSETUPDEBIAN
			echo $ENVIRONMENTSETUPINSTALL
			sudo apt-get install git-core gnupg flex bison gperf build-essential \
			zip curl zlib1g-dev libc6-dev lib32ncurses5-dev ia32-libs \
			x11proto-core-dev libx11-dev lib32readline5-dev lib32z-dev \
			libgl1-mesa-dev g++-multilib mingw32 tofrodos python-markdown \
			libxml2-utils xsltproc

			sudo ln -s /usr/lib32/mesa/libGL.so.1 /usr/lib32/mesa/libGL.so
		fi

		# Ubuntu 10.04, 10.10, and 11.04
		if ( lsb_release -c | grep -q lucid ) || ( lsb_release -c | grep -q maverick ) || ( lsb_release -c | grep -q natty ); then
			echo $ENVIRONMENTSETUPULMN
			echo $ENVIRONMENTSETUPINSTALL
			sudo apt-get install git-core gnupg flex bison gperf build-essential \
			zip curl zlib1g-dev libc6-dev lib32ncurses5-dev ia32-libs \
			x11proto-core-dev libx11-dev lib32readline5-dev lib32z-dev \
			libgl1-mesa-dev g++-multilib mingw32 tofrodos python-markdown \
			libxml2-utils xsltproc

			sudo ln -s /usr/lib32/mesa/libGL.so.1 /usr/lib32/mesa/libGL.so
		fi

		# Ubuntu 11.10
		if ( lsb_release -c | grep -q oneiric ); then
			echo $ENVIRONMENTSETUPUO
			echo $ENVIRONMENTSETUPINSTALL
			sudo apt-get install git-core gnupg flex bison gperf build-essential \
			zip curl zlib1g-dev libc6-dev lib32ncurses5-dev ia32-libs \
			x11proto-core-dev libx11-dev lib32readline5-dev lib32z-dev \
			libgl1-mesa-dev g++-multilib mingw32 tofrodos python-markdown \
			libxml2-utils xsltproc libx11-dev:i386

			sudo ln -s /usr/lib/i386-linux-gnu/libX11.so.6 /usr/lib/i386-linux-gnu/libX11.so
		fi

		# Ubuntu 12.04 and 12.10
		if ( lsb_release -c | grep -q precise ) || ( lsb_release -c | grep -q quantal ); then
			echo $ENVIRONMENTSETUPUPQ
			echo $ENVIRONMENTSETUPINSTALL
			sudo apt-get install git-core gnupg flex bison gperf build-essential \
			zip curl libc6-dev libncurses5-dev:i386 x11proto-core-dev \
			libx11-dev:i386 libreadline6-dev:i386 libgl1-mesa-dev:i386 \
			g++-multilib mingw32 tofrodos python-markdown \
			libxml2-utils xsltproc zlib1g-dev:i386 \
			gcc-4.4 gcc-4.5 g++-4.4-multilib g++-4.5-multilib # threw these in to make sure it builds ;)
			sudo ln -s /usr/lib/i386-linux-gnu/mesa/libGL.so.1 /usr/lib/i386-linux-gnu/libGL.so
		fi

		# Ubuntu 13.04, 13.10, and 14.04
		if ( lsb_release -c | grep -q raring ) || ( lsb_release -c | grep -q saucy ) || ( lsb_release -c | grep -q trusty ); then
			echo $ENVIRONMENTSETUPURST
			echo $ENVIRONMENTSETUPINSTALL
			sudo apt-get install git-core gnupg flex bison gperf build-essential \
			zip curl libc6-dev libncurses5-dev:i386 x11proto-core-dev \
			libx11-dev:i386 libreadline6-dev:i386 libgl1-mesa-dev:i386 \
			g++-multilib mingw32 tofrodos python-markdown \
			libxml2-utils xsltproc zlib1g-dev:i386 \
			gcc-4.4 g++-4.4-multilib gcc-4.6 g++-4.6-multilib schedtool # threw these in to make sure it builds ;)
			sudo ln -s /usr/lib/i386-linux-gnu/mesa/libGL.so.1 /usr/lib/i386-linux-gnu/libGL.so
		fi

		# Linux Mint
		if ( lsb_release -i | grep -q Mint ); then
			echo $ENVIRONMENTSETUPMINT
			echo $ENVIRONMENTSETUPINSTALL
			sudo apt-get install git-core gnupg flex bison gperf build-essential \
			zip curl zlib1g-dev libc6-dev lib32ncurses5-dev ia32-libs \
			x11proto-core-dev libx11-dev lib32readline5-dev lib32z-dev \
			libgl1-mesa-dev g++-multilib mingw32 tofrodos python-markdown \
			libxml2-utils xsltproc
		fi


		# Debian based java installation
		echo $ENVIRONMENTSETUPWEBUPD8
		echo ""
		sudo add-apt-repository ppa:webupd8team/java
		sudo apt-get update
		sudo apt-get install oracle-java6-installer

		echo ""
		echo $COMPLETEDMESSAGE
		envir=true
		read -p "$ENTERTOCONTINUE" done
	fi



	if ( find /etc/arch-release &> /dev/null ); then
		echo $ENVIRONMENTSETUPARCH
		echo $ENVIRONMENTSETUPINSTALL
		sudo pacman -Sy abs base-devel
		sudo pacman -S openjdk6 perl git gnupg flex bison gperf zip unzip sdl wxgtk \
		squashfs-tools ncurses libpng zlib libusb libusb-compat readline

		mkdir -p $LOCAL/../archbuilds

		wget http://swordrune10.net/files/archlinux/make-3.81.tar
		tar xvf make-3.81.tar
		cd make-3.8.1
		makepkg -cfs PKGBUILD
		sudo pacman -U make-3.81-*-x86_64.pkg.tar.xz

		cd ..
		wget http://swordrune10.net/files/archlinux/git-1.7.6.tar
		tar xvf git-1.7.6.tar
		cd git-1.7.6
		makepkg -cfs PKGBUILD
		sudo pacman -U git-1.7.6-*-x86_64.pkg.tar.xz

		cd ..
		wget http://swordrune10.net/files/archlinux/perl-5.10.1.tar
		tar xvf perl-5.10.1.tar
		cd perl-5.10.1
		makepkg -cfs PKGBUILD
		sudo pacman -U perl-5.10.1-*-x86_64.pkg.tar.xz

		cd ..
		https://aur.archlinux.org/packages/package-query-git/package-query-git.tar.gz
		tar xvf package-query-git.tar.gz
		cd package-query-git
		makepkg -cfs PKGBUILD
		sudo pacman -U package-query-git-*-x86_64.pkg.tar.xz

		cd ..
		 https://aur.archlinux.org/packages/yaourt-git/yaourt-git.tar.gz
		tar xvf yaourt-git.tar.gz
		cd yaourt-git
		makepkg -cfs PKGBUILD
		sudo pacman -U package-query-git-*-x86_64.pkg.tar.xz

		sudo yaourt -Sy esdl pngcrush schedtool repo

		sudo sed -i 's/#Include = \/etc\/pacman.d\/mirrorlist/Include = \/etc\/pacman.d\/mirrorlist/g' /etc/pacman.conf

		sudo pacman -Sy gcc-multilib gcc-libs-multilib binutils-multilib libtool-multilib lib32-libusb \
		lib32-libusb-compat lib32-readline lib32-glibc lib32-zlib

		if ( python -V | grep -q "Python 3" ); then
			sudo mv /usr/bin/python /usr/bin/python.bak
			sudo ln -s /usr/bin/python2 /usr/bin/python
		fi

		rm -rf $LOCAL/../archbuilds

		echo $ENVIRONMENTSETUPFLEXION
		read -p "$ENTERTOCONTINUE" done
		# Exerpts from the much smarter (as u can see from the code) flexion.org oab-java script
		# slightly edited to remove unneeded code

		wget https://github.com/rraptorr/sun-java6/raw/master/debian/changelog -O $LOCAL/../archbuilds/changelog.tmp

		# Cet the current Debian package version
		DEB_VERSION=`head -n1 $LOCAL/../archbuilds/changelog.tmp | cut -d'(' -f2 | cut -d')' -f1 | cut -d'~' -f1`

		# Determine the currently supported Java version and update
		JAVA_VER=`echo ${DEB_VERSION} | cut -d'.' -f1`
		JAVA_UPD=`echo ${DEB_VERSION} | cut -d'.' -f2 | cut -d'-' -f1`

		# Try and dynamic find the JDK downloads
		echo $ENVIRONMENTSETUPFLEXION1
		wget "http://www.oracle.com/technetwork/java/javase/downloads/index.html" -O /tmp/oab-index.html

		# See if the Java version is on the download frontpage, otherwise look for it in
		# the previous releases page.
		DOWNLOAD_INDEX=`grep -P -o "/technetwork/java/javase/downloads/jdk-${JAVA_VER}u${JAVA_UPD}-downloads-\d+\.html" /tmp/oab-index.html | uniq`

		if [ -n "${DOWNLOAD_INDEX}" ]; then
			echo $ENVIRONMENTSETUPFLEXION2
			wget http://www.oracle.com/${DOWNLOAD_INDEX} -O /tmp/oab-download.html
		else
			echo $ENVIRONMENTSETUPFLEXION3
			wget http://www.oracle.com/technetwork/java/javasebusiness/downloads/java-archive-downloads-javase6-419409.html -O /tmp/oab-download.html
		fi

		for JAVA_BIN in jdk-${JAVA_VER}u${JAVA_UPD}-linux-x64.bin
		do
			# Get the download URL and size
			DOWNLOAD_URL=`grep ${JAVA_BIN} /tmp/oab-download.html | cut -d'{' -f2 | cut -d',' -f3 | cut -d'"' -f4`
			DOWNLOAD_SIZE=`grep ${JAVA_BIN} /tmp/oab-download.html | cut -d'{' -f2 | cut -d',' -f2 | cut -d':' -f2 | sed 's/"//g'`
			# Cookies required for download
			COOKIES="oraclelicensejdk-${JAVA_VER}u${JAVA_UPD}-oth-JPR=accept-securebackup-cookie;gpw_e24=http://edelivery.oracle.com"

			echo " [x] Downloading ${JAVA_BIN} : ${DOWNLOAD_SIZE} "
			wget --no-check-certificate --header="Cookie: ${COOKIES}" -c "${DOWNLOAD_URL}" -O $LOCAL/../archbuilds/${JAVA_BIN}

		done

		chmod +x $LOCAL/../archbuilds/${JAVA_BIN}

		rm -rf $LOCAL/../archbuilds
		sudo mv ${JAVA_BIN} /opt

 		sudo cd /opt
 		sudo ./${JAVA_BIN}
 		sudo rm ${JAVA_BIN}

		cd jdk*/bin
		jdk=$( pwd )

		cd ../jre/bin
		jre=$( pwd )

		sed -i -e "/PATH=/ a \
PATH="\$PATH:$jdk:$jre"" /etc/profile

		echo ""
		echo $COMPLETEDMESSAGE
		envir=true
		read -p "$ENTERTOCONTINUE" done
	fi
fi

if ( uname -a | grep -q Darwin ); then
	clear

	echo $ENVIRONMENTSETUPDARWIN
	echo $ENVIRONMENTSETUPDXCODE
	read -p "$QUESTIONYESNO" xcode

	echo $ENVIRONMENTSETUPDMACPORTS
	read -p "$QUESTIONYESNO" macports

	if [ "$xcode" == $ANSWERY ] || [ "$xcode" == $ANSWERYES ] && [ "$macports" == $ANSWERY ] || [ "$macports" == $ANSWERYES ]; then
		if ( ! cat ~/.bash_profile | grep -q "export PATH=/opt/local/bin:\$PATH" ); then
			echo "export PATH=/opt/local/bin:\$PATH" >> ~/.bash_profile
		fi

		sudo port install gmake libsdl git-core gnupg

		if ( ! cat ~/.bash_profile | grep -q "ulimit -S -n 1024" ); then
			echo "ulimit -S -n 1024" >> ~/.bash_profile
		fi
	else
		echo $ABORTMESSAGE
		read -p "$ENTERTOCONTINUE" done
		exit 0
	fi

	echo ""
	echo $COMPLETEDMESSAGE
	envir=true
	read -p "$ENTERTOCONTINUE" done
fi

if [ ! "$envir" ]; then
	clear

	echo $ENVIRONMENTSETUPNOTSUPPORTED
	echo ""
	echo $ERRORCONTACTINFO
	read -p "$ENTERTOCONTINUE" done
fi
